# Try to find GPHOTO2
# GPHOTO2_FOUND - system has GPHOTO2
# GPHOTO2_INCLUDE_DIR - the GPHOTO2 include directory
# GPHOTO2_LIBRARIES - Link these to use libghoto2

if (GPHOTO2_INCLUDE_DIR AND GPHOTO2_LIBRARIES)
  # in cache already
  set(GPHOTO2_FOUND TRUE)
else (GPHOTO2_INCLUDE_DIR AND GPHOTO2_LIBRARIES)
  find_path(GPHOTO2_INCLUDE_DIR gphoto2.h
    PATH_SUFFIXES gphoto2
    ${_obIncDir}
    ${GNUWIN32_DIR}/include
  )

  find_library(GPHOTO2_LIBRARIES NAMES gphoto2
    PATHS
    ${_obLinkDir}
    ${GNUWIN32_DIR}/lib
  )

  find_library(GPHOTO2_PORT_LIBRARIES NAMES gphoto2_port
    PATHS
    ${_obLinkDir}
    ${GNUWIN32_DIR}/lib
  )
  if(GPHOTO2_PORT_LIBRARIES)
    list(APPEND GPHOTO2_LIBRARIES ${GPHOTO2_PORT_LIBRARIES})
  endif()

  if(GPHOTO2_INCLUDE_DIR AND GPHOTO2_LIBRARIES)
    set(GPHOTO2_FOUND TRUE)
  else (GPHOTO2_INCLUDE_DIR AND GPHOTO2_LIBRARIES)
    set(GPHOTO2_FOUND FALSE)
  endif(GPHOTO2_INCLUDE_DIR AND GPHOTO2_LIBRARIES)


  if (GPHOTO2_FOUND)
    if (NOT GPHOTO2_FIND_QUIETLY)
      message(STATUS "Found libgphoto2: ${GPHOTO2_LIBRARIES}")
    endif (NOT GPHOTO2_FIND_QUIETLY)
  else (GPHOTO2_FOUND)
    if (GPHOTO2_FIND_REQUIRED)
      message(FATAL_ERROR "libgphoto2 not found.")
    endif (GPHOTO2_FIND_REQUIRED)
  endif (GPHOTO2_FOUND)

  mark_as_advanced(GPHOTO2_INCLUDE_DIR GPHOTO2_LIBRARIES)

endif (GPHOTO2_INCLUDE_DIR AND GPHOTO2_LIBRARIES)
