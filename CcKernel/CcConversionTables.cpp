/*
 * This file is part of CcOS.
 *
 * CcOS is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * CcOS is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with CcOS.  If not, see <http://www.gnu.org/licenses/>.
 **/
/**
 * @file
 * @copyright Andreas Dirmeier (C) 2017
 * @author    Andreas Dirmeier
 * @par       Web:      http://coolcow.de/projects/CcOS
 * @par       Language: C++11
 * @brief     Implementation of Class CcConversionTables
 */
#include "CcConversionTables.h"

class CcConversionTables::CPrivate
{
public:
  static const uint16 s_pU8LogToU12Table[256];
};

/**
 * @brief Generated Table with with:
 *          Factor = (PWM/Start)^(1/(Steps-1))
 *          Value  = Start*(Factor^(Number-1))
 *
 *        Used Values:
 *          PWM = 4095, Start = 1, Steps = 256
 *        Variables: Number = Index of table
 *                   Value  = Value of Index in table
 */
const uint16 CcConversionTables::CPrivate::s_pU8LogToU12Table[256] = {
  0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x2,
  0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x3, 0x3, 0x3,
  0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x5,
  0x5, 0x5, 0x5, 0x5, 0x5, 0x6, 0x6, 0x6, 0x6, 0x6, 0x7, 0x7, 0x7, 0x7, 0x8, 0x8,
  0x8, 0x8, 0x9, 0x9, 0x9, 0x9, 0xA, 0xA, 0xA, 0xB, 0xB, 0xC, 0xC, 0xC, 0xD, 0xD,
  0xE, 0xE, 0xF, 0xF, 0xF, 0x10, 0x11, 0x11, 0x12, 0x12, 0x13, 0x13, 0x14, 0x15,
  0x15, 0x16, 0x17, 0x18, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,
  0x21, 0x22, 0x23, 0x24, 0x25, 0x27, 0x28, 0x29, 0x2B, 0x2C, 0x2D, 0x2F, 0x31,
  0x32, 0x34, 0x36, 0x37, 0x39, 0x3B, 0x3D, 0x3F, 0x41, 0x43, 0x45, 0x48, 0x4A,
  0x4D, 0x4F, 0x52, 0x54, 0x57, 0x5A, 0x5D, 0x60, 0x63, 0x67, 0x6A, 0x6E, 0x71,
  0x75, 0x79, 0x7D, 0x81, 0x85, 0x8A, 0x8E, 0x93, 0x98, 0x9D, 0xA2, 0xA8, 0xAD,
  0xB3, 0xB9, 0xBF, 0xC5, 0xCC, 0xD3, 0xDA, 0xE1, 0xE8, 0xF0, 0xF8, 0x100, 0x109,
  0x111, 0x11A, 0x124, 0x12E, 0x138, 0x142, 0x14D, 0x158, 0x163, 0x16F, 0x17B,
  0x187, 0x194, 0x1A2, 0x1B0, 0x1BE, 0x1CD, 0x1DC, 0x1EC, 0x1FC, 0x20D, 0x21E,
  0x230, 0x243, 0x256, 0x26A, 0x27F, 0x294, 0x2AA, 0x2C0, 0x2D8, 0x2F0, 0x309,
  0x322, 0x33D, 0x358, 0x375, 0x392, 0x3B0, 0x3D0, 0x3F0, 0x412, 0x434, 0x458,
  0x47D, 0x4A3, 0x4CA, 0x4F3, 0x51D, 0x548, 0x575, 0x5A3, 0x5D3, 0x605, 0x638,
  0x66D, 0x6A3, 0x6DB, 0x716, 0x752, 0x790, 0x7D0, 0x812, 0x857, 0x89E, 0x8E7,
  0x932, 0x980, 0x9D1, 0xA24, 0xA7B, 0xAD4, 0xB2F, 0xB8E, 0xBF1, 0xC56, 0xCBF,
  0xD2B, 0xD9B, 0xE0E, 0xE85, 0xF01, 0xF80, 0xfff
};

uint16 CcConversionTables::convertU8LogToU12(uint8 uiNumber)
{
  return CcConversionTables::CPrivate::s_pU8LogToU12Table[uiNumber];
}
